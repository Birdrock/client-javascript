/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: unversioned
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/IntstrIntOrString'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./IntstrIntOrString'));
  } else {
    // Browser globals (root is window)
    if (!root.Kubernetes) {
      root.Kubernetes = {};
    }
    root.Kubernetes.V1beta1RollingUpdateDeployment = factory(root.Kubernetes.ApiClient, root.Kubernetes.IntstrIntOrString);
  }
}(this, function(ApiClient, IntstrIntOrString) {
  'use strict';




  /**
   * The V1beta1RollingUpdateDeployment model module.
   * @module model/V1beta1RollingUpdateDeployment
   * @version unversioned
   */

  /**
   * Constructs a new <code>V1beta1RollingUpdateDeployment</code>.
   * Spec to control the desired behavior of rolling update.
   * @alias module:model/V1beta1RollingUpdateDeployment
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>V1beta1RollingUpdateDeployment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V1beta1RollingUpdateDeployment} obj Optional instance to populate.
   * @return {module:model/V1beta1RollingUpdateDeployment} The populated <code>V1beta1RollingUpdateDeployment</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('maxSurge')) {
        obj['maxSurge'] = IntstrIntOrString.constructFromObject(data['maxSurge']);
      }
      if (data.hasOwnProperty('maxUnavailable')) {
        obj['maxUnavailable'] = IntstrIntOrString.constructFromObject(data['maxUnavailable']);
      }
    }
    return obj;
  }

  /**
   * The maximum number of pods that can be scheduled above the desired number of pods. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute number is calculated from percentage by rounding up. By default, a value of 1 is used. Example: when this is set to 30%, the new RC can be scaled up immediately when the rolling update starts, such that the total number of old and new pods do not exceed 130% of desired pods. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of desired pods.
   * @member {module:model/IntstrIntOrString} maxSurge
   */
  exports.prototype['maxSurge'] = undefined;
  /**
   * The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding up. This can not be 0 if MaxSurge is 0. By default, a fixed value of 1 is used. Example: when this is set to 30%, the old RC can be scaled down to 70% of desired pods immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that the total number of pods available at all times during the update is at least 70% of desired pods.
   * @member {module:model/IntstrIntOrString} maxUnavailable
   */
  exports.prototype['maxUnavailable'] = undefined;



  return exports;
}));


