/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V1ContainerStatus', 'model/V1PodCondition', 'model/V1Time'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1ContainerStatus'), require('./V1PodCondition'), require('./V1Time'));
  } else {
    // Browser globals (root is window)
    if (!root.Kubernetes) {
      root.Kubernetes = {};
    }
    root.Kubernetes.V1PodStatus = factory(root.Kubernetes.ApiClient, root.Kubernetes.V1ContainerStatus, root.Kubernetes.V1PodCondition, root.Kubernetes.V1Time);
  }
}(this, function(ApiClient, V1ContainerStatus, V1PodCondition, V1Time) {
  'use strict';




  /**
   * The V1PodStatus model module.
   * @module model/V1PodStatus
   * @version v1.6.0
   */

  /**
   * Constructs a new <code>V1PodStatus</code>.
   * PodStatus represents information about the status of a pod. Status may trail the actual state of a system.
   * @alias module:model/V1PodStatus
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>V1PodStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V1PodStatus} obj Optional instance to populate.
   * @return {module:model/V1PodStatus} The populated <code>V1PodStatus</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('conditions')) {
        obj['conditions'] = ApiClient.convertToType(data['conditions'], [V1PodCondition]);
      }
      if (data.hasOwnProperty('containerStatuses')) {
        obj['containerStatuses'] = ApiClient.convertToType(data['containerStatuses'], [V1ContainerStatus]);
      }
      if (data.hasOwnProperty('hostIP')) {
        obj['hostIP'] = ApiClient.convertToType(data['hostIP'], 'String');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('phase')) {
        obj['phase'] = ApiClient.convertToType(data['phase'], 'String');
      }
      if (data.hasOwnProperty('podIP')) {
        obj['podIP'] = ApiClient.convertToType(data['podIP'], 'String');
      }
      if (data.hasOwnProperty('qosClass')) {
        obj['qosClass'] = ApiClient.convertToType(data['qosClass'], 'String');
      }
      if (data.hasOwnProperty('reason')) {
        obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
      }
      if (data.hasOwnProperty('startTime')) {
        obj['startTime'] = V1Time.constructFromObject(data['startTime']);
      }
    }
    return obj;
  }

  /**
   * Current service state of pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-conditions
   * @member {Array.<module:model/V1PodCondition>} conditions
   */
  exports.prototype['conditions'] = undefined;
  /**
   * The list has one entry per container in the manifest. Each entry is currently the output of `docker inspect`. More info: http://kubernetes.io/docs/user-guide/pod-states#container-statuses
   * @member {Array.<module:model/V1ContainerStatus>} containerStatuses
   */
  exports.prototype['containerStatuses'] = undefined;
  /**
   * IP address of the host to which the pod is assigned. Empty if not yet scheduled.
   * @member {String} hostIP
   */
  exports.prototype['hostIP'] = undefined;
  /**
   * A human readable message indicating details about why the pod is in this condition.
   * @member {String} message
   */
  exports.prototype['message'] = undefined;
  /**
   * Current condition of the pod. More info: http://kubernetes.io/docs/user-guide/pod-states#pod-phase
   * @member {String} phase
   */
  exports.prototype['phase'] = undefined;
  /**
   * IP address allocated to the pod. Routable at least within the cluster. Empty if not yet allocated.
   * @member {String} podIP
   */
  exports.prototype['podIP'] = undefined;
  /**
   * The Quality of Service (QOS) classification assigned to the pod based on resource requirements See PodQOSClass type for available QOS classes More info: https://github.com/kubernetes/kubernetes/blob/master/docs/design/resource-qos.md
   * @member {String} qosClass
   */
  exports.prototype['qosClass'] = undefined;
  /**
   * A brief CamelCase message indicating details about why the pod is in this state. e.g. 'OutOfDisk'
   * @member {String} reason
   */
  exports.prototype['reason'] = undefined;
  /**
   * RFC 3339 date and time at which the object was acknowledged by the Kubelet. This is before the Kubelet pulled the container image(s) for the pod.
   * @member {module:model/V1Time} startTime
   */
  exports.prototype['startTime'] = undefined;



  return exports;
}));


