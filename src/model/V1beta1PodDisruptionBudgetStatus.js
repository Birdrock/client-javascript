/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V1Time'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1Time'));
  } else {
    // Browser globals (root is window)
    if (!root.Kubernetes) {
      root.Kubernetes = {};
    }
    root.Kubernetes.V1beta1PodDisruptionBudgetStatus = factory(root.Kubernetes.ApiClient, root.Kubernetes.V1Time);
  }
}(this, function(ApiClient, V1Time) {
  'use strict';




  /**
   * The V1beta1PodDisruptionBudgetStatus model module.
   * @module model/V1beta1PodDisruptionBudgetStatus
   * @version v1.6.0
   */

  /**
   * Constructs a new <code>V1beta1PodDisruptionBudgetStatus</code>.
   * PodDisruptionBudgetStatus represents information about the status of a PodDisruptionBudget. Status may trail the actual state of a system.
   * @alias module:model/V1beta1PodDisruptionBudgetStatus
   * @class
   * @param currentHealthy {Integer} current number of healthy pods
   * @param desiredHealthy {Integer} minimum desired number of healthy pods
   * @param disruptedPods {Object.<String, module:model/V1Time>} DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.
   * @param disruptionsAllowed {Integer} Number of pod disruptions that are currently allowed.
   * @param expectedPods {Integer} total number of pods counted by this disruption budget
   */
  var exports = function(currentHealthy, desiredHealthy, disruptedPods, disruptionsAllowed, expectedPods) {
    var _this = this;

    _this['currentHealthy'] = currentHealthy;
    _this['desiredHealthy'] = desiredHealthy;
    _this['disruptedPods'] = disruptedPods;
    _this['disruptionsAllowed'] = disruptionsAllowed;
    _this['expectedPods'] = expectedPods;

  };

  /**
   * Constructs a <code>V1beta1PodDisruptionBudgetStatus</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V1beta1PodDisruptionBudgetStatus} obj Optional instance to populate.
   * @return {module:model/V1beta1PodDisruptionBudgetStatus} The populated <code>V1beta1PodDisruptionBudgetStatus</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('currentHealthy')) {
        obj['currentHealthy'] = ApiClient.convertToType(data['currentHealthy'], 'Integer');
      }
      if (data.hasOwnProperty('desiredHealthy')) {
        obj['desiredHealthy'] = ApiClient.convertToType(data['desiredHealthy'], 'Integer');
      }
      if (data.hasOwnProperty('disruptedPods')) {
        obj['disruptedPods'] = ApiClient.convertToType(data['disruptedPods'], {'String': V1Time});
      }
      if (data.hasOwnProperty('disruptionsAllowed')) {
        obj['disruptionsAllowed'] = ApiClient.convertToType(data['disruptionsAllowed'], 'Integer');
      }
      if (data.hasOwnProperty('expectedPods')) {
        obj['expectedPods'] = ApiClient.convertToType(data['expectedPods'], 'Integer');
      }
      if (data.hasOwnProperty('observedGeneration')) {
        obj['observedGeneration'] = ApiClient.convertToType(data['observedGeneration'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * current number of healthy pods
   * @member {Integer} currentHealthy
   */
  exports.prototype['currentHealthy'] = undefined;
  /**
   * minimum desired number of healthy pods
   * @member {Integer} desiredHealthy
   */
  exports.prototype['desiredHealthy'] = undefined;
  /**
   * DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn't occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.
   * @member {Object.<String, module:model/V1Time>} disruptedPods
   */
  exports.prototype['disruptedPods'] = undefined;
  /**
   * Number of pod disruptions that are currently allowed.
   * @member {Integer} disruptionsAllowed
   */
  exports.prototype['disruptionsAllowed'] = undefined;
  /**
   * total number of pods counted by this disruption budget
   * @member {Integer} expectedPods
   */
  exports.prototype['expectedPods'] = undefined;
  /**
   * Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status informatio is valid only if observedGeneration equals to PDB's object generation.
   * @member {Integer} observedGeneration
   */
  exports.prototype['observedGeneration'] = undefined;



  return exports;
}));


