/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V2alpha1JobTemplateSpec'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V2alpha1JobTemplateSpec'));
  } else {
    // Browser globals (root is window)
    if (!root.Kubernetes) {
      root.Kubernetes = {};
    }
    root.Kubernetes.V2alpha1CronJobSpec = factory(root.Kubernetes.ApiClient, root.Kubernetes.V2alpha1JobTemplateSpec);
  }
}(this, function(ApiClient, V2alpha1JobTemplateSpec) {
  'use strict';




  /**
   * The V2alpha1CronJobSpec model module.
   * @module model/V2alpha1CronJobSpec
   * @version v1.6.0
   */

  /**
   * Constructs a new <code>V2alpha1CronJobSpec</code>.
   * CronJobSpec describes how the job execution will look like and when it will actually run.
   * @alias module:model/V2alpha1CronJobSpec
   * @class
   * @param jobTemplate {module:model/V2alpha1JobTemplateSpec} JobTemplate is the object that describes the job that will be created when executing a CronJob.
   * @param schedule {String} Schedule contains the schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
   */
  var exports = function(jobTemplate, schedule) {
    var _this = this;


    _this['jobTemplate'] = jobTemplate;
    _this['schedule'] = schedule;


  };

  /**
   * Constructs a <code>V2alpha1CronJobSpec</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V2alpha1CronJobSpec} obj Optional instance to populate.
   * @return {module:model/V2alpha1CronJobSpec} The populated <code>V2alpha1CronJobSpec</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('concurrencyPolicy')) {
        obj['concurrencyPolicy'] = ApiClient.convertToType(data['concurrencyPolicy'], 'String');
      }
      if (data.hasOwnProperty('jobTemplate')) {
        obj['jobTemplate'] = V2alpha1JobTemplateSpec.constructFromObject(data['jobTemplate']);
      }
      if (data.hasOwnProperty('schedule')) {
        obj['schedule'] = ApiClient.convertToType(data['schedule'], 'String');
      }
      if (data.hasOwnProperty('startingDeadlineSeconds')) {
        obj['startingDeadlineSeconds'] = ApiClient.convertToType(data['startingDeadlineSeconds'], 'Integer');
      }
      if (data.hasOwnProperty('suspend')) {
        obj['suspend'] = ApiClient.convertToType(data['suspend'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * ConcurrencyPolicy specifies how to treat concurrent executions of a Job.
   * @member {String} concurrencyPolicy
   */
  exports.prototype['concurrencyPolicy'] = undefined;
  /**
   * JobTemplate is the object that describes the job that will be created when executing a CronJob.
   * @member {module:model/V2alpha1JobTemplateSpec} jobTemplate
   */
  exports.prototype['jobTemplate'] = undefined;
  /**
   * Schedule contains the schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
   * @member {String} schedule
   */
  exports.prototype['schedule'] = undefined;
  /**
   * Optional deadline in seconds for starting the job if it misses scheduled time for any reason.  Missed jobs executions will be counted as failed ones.
   * @member {Integer} startingDeadlineSeconds
   */
  exports.prototype['startingDeadlineSeconds'] = undefined;
  /**
   * Suspend flag tells the controller to suspend subsequent executions, it does not apply to already started executions.  Defaults to false.
   * @member {Boolean} suspend
   */
  exports.prototype['suspend'] = undefined;



  return exports;
}));


