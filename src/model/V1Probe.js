/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V1ExecAction', 'model/V1HTTPGetAction', 'model/V1TCPSocketAction'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./V1ExecAction'), require('./V1HTTPGetAction'), require('./V1TCPSocketAction'));
  } else {
    // Browser globals (root is window)
    if (!root.Kubernetes) {
      root.Kubernetes = {};
    }
    root.Kubernetes.V1Probe = factory(root.Kubernetes.ApiClient, root.Kubernetes.V1ExecAction, root.Kubernetes.V1HTTPGetAction, root.Kubernetes.V1TCPSocketAction);
  }
}(this, function(ApiClient, V1ExecAction, V1HTTPGetAction, V1TCPSocketAction) {
  'use strict';




  /**
   * The V1Probe model module.
   * @module model/V1Probe
   * @version v1.6.0
   */

  /**
   * Constructs a new <code>V1Probe</code>.
   * Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
   * @alias module:model/V1Probe
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>V1Probe</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V1Probe} obj Optional instance to populate.
   * @return {module:model/V1Probe} The populated <code>V1Probe</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('exec')) {
        obj['exec'] = V1ExecAction.constructFromObject(data['exec']);
      }
      if (data.hasOwnProperty('failureThreshold')) {
        obj['failureThreshold'] = ApiClient.convertToType(data['failureThreshold'], 'Integer');
      }
      if (data.hasOwnProperty('httpGet')) {
        obj['httpGet'] = V1HTTPGetAction.constructFromObject(data['httpGet']);
      }
      if (data.hasOwnProperty('initialDelaySeconds')) {
        obj['initialDelaySeconds'] = ApiClient.convertToType(data['initialDelaySeconds'], 'Integer');
      }
      if (data.hasOwnProperty('periodSeconds')) {
        obj['periodSeconds'] = ApiClient.convertToType(data['periodSeconds'], 'Integer');
      }
      if (data.hasOwnProperty('successThreshold')) {
        obj['successThreshold'] = ApiClient.convertToType(data['successThreshold'], 'Integer');
      }
      if (data.hasOwnProperty('tcpSocket')) {
        obj['tcpSocket'] = V1TCPSocketAction.constructFromObject(data['tcpSocket']);
      }
      if (data.hasOwnProperty('timeoutSeconds')) {
        obj['timeoutSeconds'] = ApiClient.convertToType(data['timeoutSeconds'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   * @member {module:model/V1ExecAction} exec
   */
  exports.prototype['exec'] = undefined;
  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   * @member {Integer} failureThreshold
   */
  exports.prototype['failureThreshold'] = undefined;
  /**
   * HTTPGet specifies the http request to perform.
   * @member {module:model/V1HTTPGetAction} httpGet
   */
  exports.prototype['httpGet'] = undefined;
  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
   * @member {Integer} initialDelaySeconds
   */
  exports.prototype['initialDelaySeconds'] = undefined;
  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   * @member {Integer} periodSeconds
   */
  exports.prototype['periodSeconds'] = undefined;
  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.
   * @member {Integer} successThreshold
   */
  exports.prototype['successThreshold'] = undefined;
  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported
   * @member {module:model/V1TCPSocketAction} tcpSocket
   */
  exports.prototype['tcpSocket'] = undefined;
  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: http://kubernetes.io/docs/user-guide/pod-states#container-probes
   * @member {Integer} timeoutSeconds
   */
  exports.prototype['timeoutSeconds'] = undefined;



  return exports;
}));


