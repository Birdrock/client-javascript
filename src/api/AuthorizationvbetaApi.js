/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/V1beta1LocalSubjectAccessReview', 'model/V1beta1SelfSubjectAccessReview', 'model/V1beta1SubjectAccessReview', 'model/V1APIResourceList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/V1beta1LocalSubjectAccessReview'), require('../model/V1beta1SelfSubjectAccessReview'), require('../model/V1beta1SubjectAccessReview'), require('../model/V1APIResourceList'));
  } else {
    // Browser globals (root is window)
    if (!root.Kubernetes) {
      root.Kubernetes = {};
    }
    root.Kubernetes.AuthorizationvbetaApi = factory(root.Kubernetes.ApiClient, root.Kubernetes.V1beta1LocalSubjectAccessReview, root.Kubernetes.V1beta1SelfSubjectAccessReview, root.Kubernetes.V1beta1SubjectAccessReview, root.Kubernetes.V1APIResourceList);
  }
}(this, function(ApiClient, V1beta1LocalSubjectAccessReview, V1beta1SelfSubjectAccessReview, V1beta1SubjectAccessReview, V1APIResourceList) {
  'use strict';

  /**
   * Authorizationvbeta service.
   * @module api/AuthorizationvbetaApi
   * @version v1.6.0
   */

  /**
   * Constructs a new AuthorizationvbetaApi. 
   * @alias module:api/AuthorizationvbetaApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createAuthorizationV1beta1NamespacedLocalSubjectAccessReview operation.
     * @callback module:api/AuthorizationvbetaApi~createAuthorizationV1beta1NamespacedLocalSubjectAccessReviewCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1beta1LocalSubjectAccessReview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a LocalSubjectAccessReview
     * @param {module:model/V1beta1LocalSubjectAccessReview} body 
     * @param {String} namespace object name and auth scope, such as for teams and projects
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:api/AuthorizationvbetaApi~createAuthorizationV1beta1NamespacedLocalSubjectAccessReviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1beta1LocalSubjectAccessReview}
     */
    this.createAuthorizationV1beta1NamespacedLocalSubjectAccessReview = function(body, namespace, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw "Missing the required parameter 'body' when calling createAuthorizationV1beta1NamespacedLocalSubjectAccessReview";
      }

      // verify the required parameter 'namespace' is set
      if (namespace == undefined || namespace == null) {
        throw "Missing the required parameter 'namespace' when calling createAuthorizationV1beta1NamespacedLocalSubjectAccessReview";
      }


      var pathParams = {
        'namespace': namespace
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*_/_*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1beta1LocalSubjectAccessReview;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/namespaces/{namespace}/localsubjectaccessreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAuthorizationV1beta1SelfSubjectAccessReview operation.
     * @callback module:api/AuthorizationvbetaApi~createAuthorizationV1beta1SelfSubjectAccessReviewCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1beta1SelfSubjectAccessReview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a SelfSubjectAccessReview
     * @param {module:model/V1beta1SelfSubjectAccessReview} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:api/AuthorizationvbetaApi~createAuthorizationV1beta1SelfSubjectAccessReviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1beta1SelfSubjectAccessReview}
     */
    this.createAuthorizationV1beta1SelfSubjectAccessReview = function(body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw "Missing the required parameter 'body' when calling createAuthorizationV1beta1SelfSubjectAccessReview";
      }


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*_/_*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1beta1SelfSubjectAccessReview;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/selfsubjectaccessreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAuthorizationV1beta1SubjectAccessReview operation.
     * @callback module:api/AuthorizationvbetaApi~createAuthorizationV1beta1SubjectAccessReviewCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1beta1SubjectAccessReview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create a SubjectAccessReview
     * @param {module:model/V1beta1SubjectAccessReview} body 
     * @param {Object} opts Optional parameters
     * @param {String} opts.pretty If &#39;true&#39;, then the output is pretty printed.
     * @param {module:api/AuthorizationvbetaApi~createAuthorizationV1beta1SubjectAccessReviewCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1beta1SubjectAccessReview}
     */
    this.createAuthorizationV1beta1SubjectAccessReview = function(body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw "Missing the required parameter 'body' when calling createAuthorizationV1beta1SubjectAccessReview";
      }


      var pathParams = {
      };
      var queryParams = {
        'pretty': opts['pretty']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['*_/_*'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1beta1SubjectAccessReview;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/subjectaccessreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAuthorizationV1beta1APIResources operation.
     * @callback module:api/AuthorizationvbetaApi~getAuthorizationV1beta1APIResourcesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1APIResourceList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get available resources
     * @param {module:api/AuthorizationvbetaApi~getAuthorizationV1beta1APIResourcesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1APIResourceList}
     */
    this.getAuthorizationV1beta1APIResources = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BearerToken'];
      var contentTypes = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var accepts = ['application/json', 'application/yaml', 'application/vnd.kubernetes.protobuf'];
      var returnType = V1APIResourceList;

      return this.apiClient.callApi(
        '/apis/authorization.k8s.io/v1beta1/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
