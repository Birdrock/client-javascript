/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.RbacAuthorizationvalphaApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RbacAuthorizationvalphaApi', function() {
    describe('createRbacAuthorizationV1alpha1ClusterRole', function() {
      it('should call createRbacAuthorizationV1alpha1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1alpha1ClusterRole
        //instance.createRbacAuthorizationV1alpha1ClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRbacAuthorizationV1alpha1ClusterRoleBinding', function() {
      it('should call createRbacAuthorizationV1alpha1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1alpha1ClusterRoleBinding
        //instance.createRbacAuthorizationV1alpha1ClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRbacAuthorizationV1alpha1NamespacedRole', function() {
      it('should call createRbacAuthorizationV1alpha1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1alpha1NamespacedRole
        //instance.createRbacAuthorizationV1alpha1NamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRbacAuthorizationV1alpha1NamespacedRoleBinding', function() {
      it('should call createRbacAuthorizationV1alpha1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1alpha1NamespacedRoleBinding
        //instance.createRbacAuthorizationV1alpha1NamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1ClusterRole', function() {
      it('should call deleteRbacAuthorizationV1alpha1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1ClusterRole
        //instance.deleteRbacAuthorizationV1alpha1ClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1ClusterRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1alpha1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1ClusterRoleBinding
        //instance.deleteRbacAuthorizationV1alpha1ClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1CollectionClusterRole', function() {
      it('should call deleteRbacAuthorizationV1alpha1CollectionClusterRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1CollectionClusterRole
        //instance.deleteRbacAuthorizationV1alpha1CollectionClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1CollectionClusterRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1alpha1CollectionClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1CollectionClusterRoleBinding
        //instance.deleteRbacAuthorizationV1alpha1CollectionClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1CollectionNamespacedRole', function() {
      it('should call deleteRbacAuthorizationV1alpha1CollectionNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1CollectionNamespacedRole
        //instance.deleteRbacAuthorizationV1alpha1CollectionNamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1CollectionNamespacedRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1alpha1CollectionNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1CollectionNamespacedRoleBinding
        //instance.deleteRbacAuthorizationV1alpha1CollectionNamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1NamespacedRole', function() {
      it('should call deleteRbacAuthorizationV1alpha1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1NamespacedRole
        //instance.deleteRbacAuthorizationV1alpha1NamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1alpha1NamespacedRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1alpha1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1alpha1NamespacedRoleBinding
        //instance.deleteRbacAuthorizationV1alpha1NamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRbacAuthorizationV1alpha1APIResources', function() {
      it('should call getRbacAuthorizationV1alpha1APIResources successfully', function(done) {
        //uncomment below and update the code to test getRbacAuthorizationV1alpha1APIResources
        //instance.getRbacAuthorizationV1alpha1APIResources(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1alpha1ClusterRole', function() {
      it('should call listRbacAuthorizationV1alpha1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1alpha1ClusterRole
        //instance.listRbacAuthorizationV1alpha1ClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1alpha1ClusterRoleBinding', function() {
      it('should call listRbacAuthorizationV1alpha1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1alpha1ClusterRoleBinding
        //instance.listRbacAuthorizationV1alpha1ClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1alpha1NamespacedRole', function() {
      it('should call listRbacAuthorizationV1alpha1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1alpha1NamespacedRole
        //instance.listRbacAuthorizationV1alpha1NamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1alpha1NamespacedRoleBinding', function() {
      it('should call listRbacAuthorizationV1alpha1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1alpha1NamespacedRoleBinding
        //instance.listRbacAuthorizationV1alpha1NamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1alpha1RoleBindingForAllNamespaces', function() {
      it('should call listRbacAuthorizationV1alpha1RoleBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1alpha1RoleBindingForAllNamespaces
        //instance.listRbacAuthorizationV1alpha1RoleBindingForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1alpha1RoleForAllNamespaces', function() {
      it('should call listRbacAuthorizationV1alpha1RoleForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1alpha1RoleForAllNamespaces
        //instance.listRbacAuthorizationV1alpha1RoleForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1alpha1ClusterRole', function() {
      it('should call patchRbacAuthorizationV1alpha1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1alpha1ClusterRole
        //instance.patchRbacAuthorizationV1alpha1ClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1alpha1ClusterRoleBinding', function() {
      it('should call patchRbacAuthorizationV1alpha1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1alpha1ClusterRoleBinding
        //instance.patchRbacAuthorizationV1alpha1ClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1alpha1NamespacedRole', function() {
      it('should call patchRbacAuthorizationV1alpha1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1alpha1NamespacedRole
        //instance.patchRbacAuthorizationV1alpha1NamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1alpha1NamespacedRoleBinding', function() {
      it('should call patchRbacAuthorizationV1alpha1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1alpha1NamespacedRoleBinding
        //instance.patchRbacAuthorizationV1alpha1NamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1alpha1ClusterRole', function() {
      it('should call readRbacAuthorizationV1alpha1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1alpha1ClusterRole
        //instance.readRbacAuthorizationV1alpha1ClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1alpha1ClusterRoleBinding', function() {
      it('should call readRbacAuthorizationV1alpha1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1alpha1ClusterRoleBinding
        //instance.readRbacAuthorizationV1alpha1ClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1alpha1NamespacedRole', function() {
      it('should call readRbacAuthorizationV1alpha1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1alpha1NamespacedRole
        //instance.readRbacAuthorizationV1alpha1NamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1alpha1NamespacedRoleBinding', function() {
      it('should call readRbacAuthorizationV1alpha1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1alpha1NamespacedRoleBinding
        //instance.readRbacAuthorizationV1alpha1NamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1alpha1ClusterRole', function() {
      it('should call replaceRbacAuthorizationV1alpha1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1alpha1ClusterRole
        //instance.replaceRbacAuthorizationV1alpha1ClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1alpha1ClusterRoleBinding', function() {
      it('should call replaceRbacAuthorizationV1alpha1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1alpha1ClusterRoleBinding
        //instance.replaceRbacAuthorizationV1alpha1ClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1alpha1NamespacedRole', function() {
      it('should call replaceRbacAuthorizationV1alpha1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1alpha1NamespacedRole
        //instance.replaceRbacAuthorizationV1alpha1NamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1alpha1NamespacedRoleBinding', function() {
      it('should call replaceRbacAuthorizationV1alpha1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1alpha1NamespacedRoleBinding
        //instance.replaceRbacAuthorizationV1alpha1NamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1ClusterRole', function() {
      it('should call watchRbacAuthorizationV1alpha1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1ClusterRole
        //instance.watchRbacAuthorizationV1alpha1ClusterRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1ClusterRoleBinding', function() {
      it('should call watchRbacAuthorizationV1alpha1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1ClusterRoleBinding
        //instance.watchRbacAuthorizationV1alpha1ClusterRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1ClusterRoleBindingList', function() {
      it('should call watchRbacAuthorizationV1alpha1ClusterRoleBindingList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1ClusterRoleBindingList
        //instance.watchRbacAuthorizationV1alpha1ClusterRoleBindingList(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1ClusterRoleList', function() {
      it('should call watchRbacAuthorizationV1alpha1ClusterRoleList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1ClusterRoleList
        //instance.watchRbacAuthorizationV1alpha1ClusterRoleList(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1NamespacedRole', function() {
      it('should call watchRbacAuthorizationV1alpha1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1NamespacedRole
        //instance.watchRbacAuthorizationV1alpha1NamespacedRole(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1NamespacedRoleBinding', function() {
      it('should call watchRbacAuthorizationV1alpha1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1NamespacedRoleBinding
        //instance.watchRbacAuthorizationV1alpha1NamespacedRoleBinding(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1NamespacedRoleBindingList', function() {
      it('should call watchRbacAuthorizationV1alpha1NamespacedRoleBindingList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1NamespacedRoleBindingList
        //instance.watchRbacAuthorizationV1alpha1NamespacedRoleBindingList(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1NamespacedRoleList', function() {
      it('should call watchRbacAuthorizationV1alpha1NamespacedRoleList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1NamespacedRoleList
        //instance.watchRbacAuthorizationV1alpha1NamespacedRoleList(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1RoleBindingListForAllNamespaces', function() {
      it('should call watchRbacAuthorizationV1alpha1RoleBindingListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1RoleBindingListForAllNamespaces
        //instance.watchRbacAuthorizationV1alpha1RoleBindingListForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1alpha1RoleListForAllNamespaces', function() {
      it('should call watchRbacAuthorizationV1alpha1RoleListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1alpha1RoleListForAllNamespaces
        //instance.watchRbacAuthorizationV1alpha1RoleListForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
