/**
 * Kubernetes
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.PolicyvbetaApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PolicyvbetaApi', function() {
    describe('createPolicyV1beta1NamespacedPodDisruptionBudget', function() {
      it('should call createPolicyV1beta1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test createPolicyV1beta1NamespacedPodDisruptionBudget
        //instance.createPolicyV1beta1NamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget', function() {
      it('should call deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget
        //instance.deletePolicyV1beta1CollectionNamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePolicyV1beta1NamespacedPodDisruptionBudget', function() {
      it('should call deletePolicyV1beta1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test deletePolicyV1beta1NamespacedPodDisruptionBudget
        //instance.deletePolicyV1beta1NamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPolicyV1beta1APIResources', function() {
      it('should call getPolicyV1beta1APIResources successfully', function(done) {
        //uncomment below and update the code to test getPolicyV1beta1APIResources
        //instance.getPolicyV1beta1APIResources(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPolicyV1beta1NamespacedPodDisruptionBudget', function() {
      it('should call listPolicyV1beta1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test listPolicyV1beta1NamespacedPodDisruptionBudget
        //instance.listPolicyV1beta1NamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPolicyV1beta1PodDisruptionBudgetForAllNamespaces', function() {
      it('should call listPolicyV1beta1PodDisruptionBudgetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listPolicyV1beta1PodDisruptionBudgetForAllNamespaces
        //instance.listPolicyV1beta1PodDisruptionBudgetForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchPolicyV1beta1NamespacedPodDisruptionBudget', function() {
      it('should call patchPolicyV1beta1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test patchPolicyV1beta1NamespacedPodDisruptionBudget
        //instance.patchPolicyV1beta1NamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus', function() {
      it('should call patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus successfully', function(done) {
        //uncomment below and update the code to test patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus
        //instance.patchPolicyV1beta1NamespacedPodDisruptionBudgetStatus(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readPolicyV1beta1NamespacedPodDisruptionBudget', function() {
      it('should call readPolicyV1beta1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test readPolicyV1beta1NamespacedPodDisruptionBudget
        //instance.readPolicyV1beta1NamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readPolicyV1beta1NamespacedPodDisruptionBudgetStatus', function() {
      it('should call readPolicyV1beta1NamespacedPodDisruptionBudgetStatus successfully', function(done) {
        //uncomment below and update the code to test readPolicyV1beta1NamespacedPodDisruptionBudgetStatus
        //instance.readPolicyV1beta1NamespacedPodDisruptionBudgetStatus(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replacePolicyV1beta1NamespacedPodDisruptionBudget', function() {
      it('should call replacePolicyV1beta1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test replacePolicyV1beta1NamespacedPodDisruptionBudget
        //instance.replacePolicyV1beta1NamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus', function() {
      it('should call replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus successfully', function(done) {
        //uncomment below and update the code to test replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus
        //instance.replacePolicyV1beta1NamespacedPodDisruptionBudgetStatus(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchPolicyV1beta1NamespacedPodDisruptionBudget', function() {
      it('should call watchPolicyV1beta1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test watchPolicyV1beta1NamespacedPodDisruptionBudget
        //instance.watchPolicyV1beta1NamespacedPodDisruptionBudget(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchPolicyV1beta1NamespacedPodDisruptionBudgetList', function() {
      it('should call watchPolicyV1beta1NamespacedPodDisruptionBudgetList successfully', function(done) {
        //uncomment below and update the code to test watchPolicyV1beta1NamespacedPodDisruptionBudgetList
        //instance.watchPolicyV1beta1NamespacedPodDisruptionBudgetList(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces', function() {
      it('should call watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces
        //instance.watchPolicyV1beta1PodDisruptionBudgetListForAllNamespaces(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
